active_record_object:
  table:
    # parameters of AR tables doesn't store in DB as all other config,  therefore values from config affect on down-migrations
    # i.e. safe changing of this values may be done only after rollback of all migrations
    # @note: this options require a definition for each environment if you have a single DB for all configs (i.e. for more then one env)
    schema_migrations: 'somigration_schema_migrations'
    schema_migration_extensions: 'somigration_schema_migration_extensions'
    internal_metadata_table_name: 'somigration_ar_internal_metadata'
  option:
    protected_environments: []

v1:
  db:
    name:
      # default DB for storing information about migrations and configs from config.yml, which was used during each migration
      default: 'vhod_testy'
      # target DB for apply migrations
      target: 'one_of_production'
    schema:
      main: 's_general'
      external: 's_external'
      cache: 's_cache'
    role:
      # role with superuser rights for execute migrations on cluster level; preferable, this role must be same as role(user) from config.yml
      superuser: 'db_superuser'
      # owner of particular DB
      migrator: 'owner_of_one_of_production_db'
      # role with readonly permissions for backup DB
      backuper: 'vhod_backuper'
    group:
      reader: 'g_readers'
      writer: 'g_writers'
    # you can specify any nested options for you own purpose; this options will be available in migrations and stored in a db for the aim of rollback
    external_object:
      tds_fdw:
        server_name: 'mssql_srv'
        server_option:
          servername: 'url_to_mssql_db'
          port: '1433'
          database: 'MSSQLDBName'
          tds_version: '7.1'
        user_mapping_option:
          username: 'login'
          password: 'qwerty'
